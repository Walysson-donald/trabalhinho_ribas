Título: Simplificando Orientação a Objetos

Hoje, vamos falar sobre a famosa POO (Programação Orientada a Objetos), enfatizando sua importância e explicando seus pilares por meio de uma abordagem prática, simples e de fácil entendimento.Sumário:1. Paradigmas de programaçãoSão abordagens ou estilos distintos de escrever código para resolver determinados problemas. Cada paradigma possui regras e convenções específicas que definem como o código deve ser estruturado. Abaixo, segue uma explicação resumida dos paradigmas mais comuns(procedual, funcional e orientado a objetos):Procedural: Organiza o código em uma sequência de passos finitos, semelhante a uma receita de bolo. As instruções de cozimento são lidas obrigatoriamente, uma abaixo da outra, sem pular, adiantar ou reduzir etapas.Funcional: Organiza o código, separando cada etapa do cozimento em funcionalidades menores e específicas, de modo que, ao necessitar realizar uma etapa, não seja preciso criar o código do zero. A única ação necessária será chamar a função já existente e informar os novos parâmetros, visando evitar repetições desnecessárias no código e flexibilizar a estrutura de desenvolvimento.Orientado a objetos: Esse paradigma veio para resolver diversas dores que tínhamos no passado, como a dificuldade em entender o código que apresentava um abismo de distância entre a compreensão humana dos objetos reais e o código frio/binário da máquina. Um de seus principais objetivos, assim como o funcional, é evitar repetição desnecessária de código. Este será o paradigma que vamos explorar e nos aprofundar neste artigo. Bora!2. O que é Programação Orientada a Objetos? e qual seu objetivo?É um paradigma de programação que tem como objetivo organizar, estruturar e desenvolver o código, pensando em torná-lo o mais próximo possível da vida real, atribuindo características e comportamentos reais a objetos palpáveis do nosso dia a dia.O termo “Orientação a Objetos” é simplesmente voltado para associar todo objeto existente na vida real, por exemplo, “Carro”. A p